{"version":3,"sources":["components/Message.tsx","common/index.ts","redux/StateProvider.tsx","components/Chat.tsx","components/SidebarChat.tsx","components/Sidebar.tsx","redux/reducer.ts","components/Login.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Message","isReceived","children","author","timestamp","containerClass","push","className","join","db","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","firestore","auth","provider","GoogleAuthProvider","StateContext","createContext","undefined","StateProvider","reducer","initialState","Provider","value","useReducer","useStateValue","useContext","Chat","useState","input","setInput","roomId","useParams","rootName","setRootName","messages","setMessages","user","useEffect","collection","doc","onSnapshot","snapshot","data","name","orderBy","docs","map","date","moment","length","toDate","Date","now","fromNow","Avatar","src","IconButton","SearchOutlined","AttachFile","MoreVert","message","displayName","content","InsertEmoticon","type","onChange","event","target","onClick","preventDefault","alert","add","FieldValue","serverTimestamp","Mic","SidebarChat","addNewChat","id","setSeed","lastMessage","setLastMessage","msg","prompt","Math","random","to","Sidebar","rooms","setRooms","console","log","unsubscribe","photoURL","DonutLarge","ChatBubble","placeholder","r","actionTypes","state","action","Login","dispatch","alt","Button","signInWithPopup","then","result","App","path","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.abc59f98.chunk.js","sourcesContent":["import React, { ReactElement } from 'react'\r\nimport './Message.sass'\r\ninterface Props {\r\n    isReceived?: boolean\r\n    children: any,\r\n    author: string,\r\n    timestamp: string\r\n}\r\n\r\nfunction Message({isReceived = false,children,author,timestamp}: Props): ReactElement {\r\n    const containerClass = ['Message']\r\n    if(isReceived)\r\n        containerClass.push('Message-Receiver')\r\n    return (\r\n        <div className={containerClass.join(' ')}>\r\n        <div className=\"Message__Author\">{author}</div>\r\n        <div className='Message__Inner'>\r\n            <span className=\"Message__Content\">{children}</span>\r\n            <span className=\"Message__Timestamp\">{timestamp}</span>\r\n        </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Message\r\n","import firebase from \"firebase\";\r\n\r\nconst firebaseConfig =  {\r\n    apiKey: \"AIzaSyBTf9gET7N1S6fBQTOHOlHWNar2l9IJuwc\",\r\n    authDomain: \"react-chat-8f283.firebaseapp.com\",\r\n    databaseURL: \"https://react-chat-8f283.firebaseio.com\",\r\n    projectId: \"react-chat-8f283\",\r\n    storageBucket: \"react-chat-8f283.appspot.com\",\r\n    messagingSenderId: \"151504121252\",\r\n    appId: \"1:151504121252:web:889c61d8448f66d587e531\"\r\n  };\r\n\r\n  const firebaseApp = firebase.initializeApp(firebaseConfig)\r\n  const db = firebase.firestore()\r\n  const auth = firebase.auth()\r\n  const provider = new firebase.auth.GoogleAuthProvider()\r\n\r\n  export {auth,provider}\r\n  export default db","import React, { createContext, ReactElement, useContext, useReducer } from 'react'\r\nimport firebase from 'firebase/index'\r\ninterface Props {\r\n    reducer:any,\r\n    initialState:any,\r\n    children:any\r\n}\r\n\r\nexport const StateContext = createContext<any>(undefined)\r\n\r\nexport default function StateProvider({reducer,initialState,children}: Props): ReactElement {\r\n    return (\r\n        <StateContext.Provider value={\r\n            useReducer(reducer,initialState)\r\n        }>\r\n            {children}\r\n        </StateContext.Provider>\r\n    )\r\n}\r\n\r\nexport const useStateValue = () => useContext(StateContext)","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport {\r\n  AttachFile,\r\n  InsertEmoticon,\r\n  Mic,\r\n  MoreVert,\r\n  SearchOutlined,\r\n} from \"@material-ui/icons\";\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport Message from \"./Message\";\r\nimport \"./Chat.sass\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport db from \"../common\";\r\nimport firebase from \"firebase\";\r\nimport { useStateValue } from \"../redux/StateProvider\";\r\nimport moment from \"moment\";\r\n\r\ninterface Props {}\r\n\r\nexport default function Chat({}: Props): ReactElement {\r\n  const [input, setInput] = useState(\"\");\r\n  const { roomId }: { roomId: string } = useParams();\r\n  const [rootName, setRootName] = useState(\"\");\r\n  const [messages, setMessages] = useState<any[]>([]);\r\n  const [{ user }] = useStateValue();\r\n\r\n  useEffect(() => {\r\n    if (roomId) {\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .onSnapshot((snapshot) => {\r\n          setRootName(snapshot.data()?.name ?? \"\");\r\n        });\r\n      db.collection(\"rooms\")\r\n        .doc(roomId)\r\n        .collection(\"messages\")\r\n        .orderBy(\"timestamp\", \"asc\")\r\n        .onSnapshot((snapshot) => {\r\n          setMessages(snapshot.docs.map((doc) => doc.data()));\r\n        });\r\n    }\r\n    return () => {};\r\n  }, [roomId]);\r\n\r\n  const onChangeInput = (event: React.ChangeEvent<HTMLInputElement>) => {\r\n    setInput(event.target.value);\r\n  };\r\n  const sendMessage = (event: React.MouseEvent<HTMLButtonElement>) => {\r\n    event.preventDefault();\r\n    if(input.length){\r\n      if(input.length>100){\r\n        alert('Your message so loooong...')\r\n        return\r\n      }\r\n      db.collection(\"rooms\").doc(roomId).collection(\"messages\").add({\r\n        author: user.displayName,\r\n        content: input,\r\n        timestamp: firebase.firestore.FieldValue.serverTimestamp(),\r\n      });\r\n      setInput(\"\");\r\n    }\r\n  };\r\n  const date = moment(\r\n    messages[messages.length - 1]?.timestamp?.toDate() ?? Date.now()\r\n  ).fromNow();\r\n  return (\r\n    <div className=\"Chat\">\r\n      {!rootName ? (\r\n        <div>Empty</div>\r\n      ) : (\r\n        <>\r\n          <div className=\"Chat__Header\">\r\n            <Avatar\r\n              src={`https://avatars.dicebear.com/api/avataaars/${rootName}.svg`}\r\n            />\r\n            <div className=\"Chat__HeaderInfo\">\r\n              <div className=\"Chat__HeaderName\">{rootName}</div>\r\n              <div className=\"Chat__HeaderLastDate\">{date}</div>\r\n            </div>\r\n            <div className=\"Chat__HeaderRight\">\r\n              <IconButton>\r\n                <SearchOutlined />\r\n              </IconButton>\r\n              <IconButton>\r\n                <AttachFile />\r\n              </IconButton>\r\n              <IconButton>\r\n                <MoreVert />\r\n              </IconButton>\r\n            </div>\r\n          </div>\r\n          <div className=\"Chat__Body\">\r\n            {messages.map((message) => (\r\n              <Message\r\n                key={message.content}\r\n                author={message.author}\r\n                timestamp={moment(\r\n                  message.timestamp?.toDate() ?? Date.now()\r\n                ).fromNow()}\r\n                isReceived={user.displayName === message.author}\r\n              >\r\n                {message.content}\r\n              </Message>\r\n            ))}\r\n          </div>\r\n          <div className=\"Chat__Footer\">\r\n            <IconButton>\r\n              <InsertEmoticon />\r\n            </IconButton>\r\n            <form>\r\n              <input type=\"text\" value={input} onChange={onChangeInput} />\r\n              <button type=\"submit\" onClick={sendMessage}>\r\n                Send a message\r\n              </button>\r\n            </form>\r\n            <IconButton>\r\n              <Mic />\r\n            </IconButton>\r\n          </div>\r\n        </>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import { Avatar } from \"@material-ui/core\";\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport db from \"../common\";\r\nimport \"./SidebarChat.sass\";\r\ninterface Props {\r\n  addNewChat?: boolean;\r\n  name?: string;\r\n  id?: string;\r\n}\r\n\r\nexport default function SidebarChat({\r\n  addNewChat = false,\r\n  name = \"\",\r\n  id = \"\",\r\n}: Props): ReactElement {\r\n  const [seed, setSeed] = useState(\"\");\r\n  const [lastMessage, setLastMessage] = useState('')\r\n  const createChat = () => {\r\n    const name = prompt(\"Please enter name for chat\");\r\n    setSeed(`${Math.random()}`);\r\n    if (name) {\r\n      if(name.length > 20){\r\n        alert('Room name is sooo long...')\r\n        return\r\n      }\r\n      db.collection(\"rooms\").add({\r\n        name,\r\n      });\r\n    }\r\n  };\r\n  useEffect(()=>{\r\n    if(id){\r\n      db.collection('rooms').doc(id).collection('messages').orderBy('timestamp','desc')\r\n      .onSnapshot(snapshot=>{\r\n        const msg = snapshot.docs.map(doc=>doc.data())\r\n        setLastMessage(msg[0]?.content ?? \"\")\r\n      })\r\n    }\r\n  },[])\r\n\r\n\r\n  if (addNewChat) {\r\n      return (\r\n          <div onClick={createChat} className=\"SidebarChat__AddNew\">\r\n              <h2>Add new chat</h2>\r\n          </div>\r\n      )\r\n  } else {\r\n    return (\r\n      <Link to={`/rooms/${id}`} className=\"SidebarChat__Link\">\r\n      <div className=\"SidebarChat\">\r\n        <Avatar src={`https://avatars.dicebear.com/api/avataaars/${name}.svg`} />\r\n        <div className=\"SidebarChat__Info\">\r\n          <h3 className=\"SidebarChat__Nickname\">{name}</h3>\r\n          <p className=\"SidebarChat__Message\">{lastMessage}</p>\r\n        </div>\r\n      </div>\r\n      </Link>\r\n    );\r\n  }\r\n}\r\n","import { Avatar, IconButton } from \"@material-ui/core\";\r\nimport {\r\n  ChatBubble,\r\n  DonutLarge,\r\n  MoreVert,\r\n  SearchOutlined,\r\n} from \"@material-ui/icons\";\r\nimport React, { ReactElement, useEffect, useState } from \"react\";\r\nimport db from \"../common\";\r\nimport { useStateValue } from \"../redux/StateProvider\";\r\nimport \"./Sidebar.sass\";\r\nimport SidebarChat from \"./SidebarChat\";\r\n\r\ninterface Props {}\r\n\r\nfunction Sidebar({}: Props): ReactElement {\r\n  const [rooms, setRooms] = useState<any[]>([]);\r\n  const [{user},] = useStateValue() \r\n  console.log(user);\r\n  \r\n  useEffect(() => {\r\n    const unsubscribe = db.collection(\"rooms\").onSnapshot((snapshot) => {\r\n      setRooms(\r\n        snapshot.docs.map((doc) => ({\r\n          id: doc.id,\r\n          data: doc.data(),\r\n        }))\r\n      );\r\n    });\r\n    return () => {\r\n      unsubscribe()\r\n    }\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"Sidebar\">\r\n      <div className=\"Sidebar__Header\">\r\n        <div className=\"Sidebar__UserInfo\">\r\n          <Avatar src={user.photoURL} />\r\n          <span>{user.displayName}</span>\r\n        </div>\r\n        <div className=\"Sidebar_HeaderRight\">\r\n          <IconButton>\r\n            <DonutLarge />\r\n          </IconButton>\r\n          <IconButton>\r\n            <ChatBubble />\r\n          </IconButton>\r\n          <IconButton>\r\n            <MoreVert />\r\n          </IconButton>\r\n        </div>\r\n      </div>\r\n      <div className=\"Sidebar__Search\">\r\n        <div className=\"Sidebar__SearchContainer\">\r\n          <SearchOutlined />\r\n          <input placeholder=\"Search or start new chat\" type=\"text\" />\r\n        </div>\r\n      </div>\r\n      <div className=\"Sidebar__Chats\">\r\n        <SidebarChat addNewChat={true}/>\r\n        {rooms.map((r) => (\r\n          <SidebarChat\r\n            key={r.id}\r\n            name={r.data.name}\r\n            id={r.id}\r\n          />\r\n        ))}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Sidebar;\r\n","export const initialState = {\r\n    user: null\r\n}\r\nexport const actionTypes = {\r\n    SET_USER: 'SET_USER'\r\n}\r\n\r\nconst reducer = (state:any,action:any) => {\r\n    switch(action.type){\r\n        case actionTypes.SET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.user\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n    \r\n}\r\n\r\nexport default reducer","import { Button } from '@material-ui/core'\r\nimport React, { ReactElement } from 'react'\r\nimport { auth, provider } from '../common'\r\nimport { useStateValue } from '../redux/StateProvider'\r\nimport { actionTypes } from '../redux/reducer'\r\nimport './Login.sass'\r\ninterface Props {\r\n    \r\n}\r\n\r\nexport default function Login({}: Props): ReactElement {\r\n    const [,dispatch] = useStateValue()\r\n    \r\n    const signIn = ()=>{\r\n        auth.signInWithPopup(provider)\r\n            .then(result=>{\r\n                dispatch({\r\n                    type: actionTypes.SET_USER,\r\n                    user: result.user\r\n                })\r\n            })\r\n    }\r\n    \r\n    return (\r\n        <div className=\"Login\">\r\n            <div className=\"Login__Container\">\r\n                <img className='Login__Logo' src='https://upload.wikimedia.org/wikipedia/commons/thumb/6/6b/WhatsApp.svg/598px-WhatsApp.svg.png' alt='' />\r\n                <div className=\"Login__Text\">\r\n                    <h1>Sign in to WhatsApp</h1>\r\n                </div>\r\n\r\n                <Button className=\"Login__Action\" onClick={signIn}>\r\n                    Sign in with Google\r\n                </Button>\r\n            </div>            \r\n        </div>\r\n    )\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.sass\";\nimport Chat from \"./components/Chat\";\nimport Sidebar from \"./components/Sidebar\";\nimport { BrowserRouter as Router, Route, Link, Switch } from \"react-router-dom\";\nimport Login from \"./components/Login\";\nimport { useStateValue } from \"./redux/StateProvider\";\n\nfunction App() {\n  const [{user},] = useStateValue()\n\n  return (\n    <div className=\"App\">\n      {!user ?(\n        <Login />\n      ):(\n        <div className=\"App__Wrapper\">\n        <Router>\n          <Sidebar />\n          <Switch>\n            <Route path=\"/rooms/:roomId\">\n              <Chat />\n            </Route>\n            <Route path=\"/\">\n              <Chat />\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n      )\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport \"normalize.css\"\nimport \"./index.css\"\nimport StateProvider from './redux/StateProvider';\nimport reducer, { initialState } from './redux/reducer';\n\nReactDOM.render(\n  <React.StrictMode>\n    <StateProvider reducer={reducer} initialState={initialState}>\n      <App />\n    </StateProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}